6.885 Lecture 10 (Approximate Query Processing) - 10/8/13

**APPROXIMATE QUERY PROCESSING**
- histograms
- samples
- sketches

Histograms
- make a histogram of the data (count them up for some dividing feature)
  - can use that to approximate ranges
- limits of histograms
  - outliers
  - hard to deal with non-numeric values for your data (LIKE, etc...)
  - suboptimal for correlations

Sampling
- you can compute samples of your tables/data, and you can use those samples to answer queries
- sampling theory allows us to make statements about how many things we need to sample in order
  to get decently close to the real value
  - 95% chance you're +/- 2 stddev from the true avg.
- you want to make sure you have a truly random sample set
  - to get truly random sets, you would want to look at all the data.
  - but you can also just stream them and randomly pick them
    - by streaming them you can't guarantee a fixed sample size that you want
- reservoir sampling
  - you want a sample size of k from S
  - initially take the first k elements of S
  - then for each remaining item in S:
    - j = random(1,i), where i is the index of this item in S
    - if j <= k:
      - replace the jth value in R (R[j]) with S[i]

- Precompute samples
  - sample on the fly
- choose random records on the fly
  - problem: random i/o

- Outliers are a problem (rare subgroups)
  - if you want to query for a rare subset of your data, they will appear in your sample rarely
  - STRATIFIED SAMPLING!
    - produce a sample f for every subgroup of size > k
    - and you get the entire group if the group size is < k
    - but how to choose stratification attributes?
      - past queries?

Random Sampling Databases
- BLINKDB
  - random sampling... super fast like omg

Sketches
- Bloom Filter
  - summary of a large set of values
  - allows us to test if a value is in that large set
  - if bloom filter says the value doesn't exists, it definitely is not in there
  - if bloom filter says the value does exist, there's a small chance the element is actually not in there.

- Count-min-sketches
  - with probability 1-delta, the reported count < true count + N*epsilon, where N = number of values inputted to the count-min-sketch
  - where delta = 1/(e^w), where w = width of the hash function, and epsilon = e/h

SKETCHING ADVANTAGES OVER SAMPLING
- allows you to count the distinct values in a set
- they can answer a lot more queries with a lot less space
